/**
 * Copyright (c) 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */

/**
 * @Generated by gentest/gentest.sh with the following input
 *
<div id="align_items_stretch" style="width: 100px; height: 100px;">
  <div style="height: 10px;"></div>
</div>

<div id="align_items_center" style="width: 100px; height: 100px; align-items: center;">
  <div style="height: 10px; width: 10px;"></div>
</div>

<div id="align_items_flex_start" style="width: 100px; height: 100px; align-items: flex-start;">
  <div style="height: 10px; width: 10px;"></div>
</div>

<div id="align_items_flex_end" style="width: 100px; height: 100px; align-items: flex-end;">
  <div style="height: 10px; width: 10px;"></div>
</div>
 *
 */

package com.facebook.csslayout;

import org.junit.Test;

import static org.junit.Assert.assertEquals;

public class CSSLayoutAlignItemsTest {
  @Test
  public void test_align_items_stretch() {
    final CSSNode root = new CSSNode();
    root.setStyleWidth(100);
    root.setStyleHeight(100);

    final CSSNode root_child0 = new CSSNode();
    root_child0.setStyleHeight(10);
    root.addChildAt(root_child0, 0);
    root.setDirection(CSSDirection.LTR);
    root.calculateLayout(null);

    assertEquals(0, root.getLayoutX(), 0.0f);
    assertEquals(0, root.getLayoutY(), 0.0f);
    assertEquals(100, root.getLayoutWidth(), 0.0f);
    assertEquals(100, root.getLayoutHeight(), 0.0f);

    assertEquals(0, root_child0.getLayoutX(), 0.0f);
    assertEquals(0, root_child0.getLayoutY(), 0.0f);
    assertEquals(100, root_child0.getLayoutWidth(), 0.0f);
    assertEquals(10, root_child0.getLayoutHeight(), 0.0f);

    root.setDirection(CSSDirection.RTL);
    root.calculateLayout(null);

    assertEquals(0, root.getLayoutX(), 0.0f);
    assertEquals(0, root.getLayoutY(), 0.0f);
    assertEquals(100, root.getLayoutWidth(), 0.0f);
    assertEquals(100, root.getLayoutHeight(), 0.0f);

    assertEquals(0, root_child0.getLayoutX(), 0.0f);
    assertEquals(0, root_child0.getLayoutY(), 0.0f);
    assertEquals(100, root_child0.getLayoutWidth(), 0.0f);
    assertEquals(10, root_child0.getLayoutHeight(), 0.0f);
  }

  @Test
  public void test_align_items_center() {
    final CSSNode root = new CSSNode();
    root.setAlignItems(CSSAlign.CENTER);
    root.setStyleWidth(100);
    root.setStyleHeight(100);

    final CSSNode root_child0 = new CSSNode();
    root_child0.setStyleWidth(10);
    root_child0.setStyleHeight(10);
    root.addChildAt(root_child0, 0);
    root.setDirection(CSSDirection.LTR);
    root.calculateLayout(null);

    assertEquals(0, root.getLayoutX(), 0.0f);
    assertEquals(0, root.getLayoutY(), 0.0f);
    assertEquals(100, root.getLayoutWidth(), 0.0f);
    assertEquals(100, root.getLayoutHeight(), 0.0f);

    assertEquals(45, root_child0.getLayoutX(), 0.0f);
    assertEquals(0, root_child0.getLayoutY(), 0.0f);
    assertEquals(10, root_child0.getLayoutWidth(), 0.0f);
    assertEquals(10, root_child0.getLayoutHeight(), 0.0f);

    root.setDirection(CSSDirection.RTL);
    root.calculateLayout(null);

    assertEquals(0, root.getLayoutX(), 0.0f);
    assertEquals(0, root.getLayoutY(), 0.0f);
    assertEquals(100, root.getLayoutWidth(), 0.0f);
    assertEquals(100, root.getLayoutHeight(), 0.0f);

    assertEquals(45, root_child0.getLayoutX(), 0.0f);
    assertEquals(0, root_child0.getLayoutY(), 0.0f);
    assertEquals(10, root_child0.getLayoutWidth(), 0.0f);
    assertEquals(10, root_child0.getLayoutHeight(), 0.0f);
  }

  @Test
  public void test_align_items_flex_start() {
    final CSSNode root = new CSSNode();
    root.setAlignItems(CSSAlign.FLEX_START);
    root.setStyleWidth(100);
    root.setStyleHeight(100);

    final CSSNode root_child0 = new CSSNode();
    root_child0.setStyleWidth(10);
    root_child0.setStyleHeight(10);
    root.addChildAt(root_child0, 0);
    root.setDirection(CSSDirection.LTR);
    root.calculateLayout(null);

    assertEquals(0, root.getLayoutX(), 0.0f);
    assertEquals(0, root.getLayoutY(), 0.0f);
    assertEquals(100, root.getLayoutWidth(), 0.0f);
    assertEquals(100, root.getLayoutHeight(), 0.0f);

    assertEquals(0, root_child0.getLayoutX(), 0.0f);
    assertEquals(0, root_child0.getLayoutY(), 0.0f);
    assertEquals(10, root_child0.getLayoutWidth(), 0.0f);
    assertEquals(10, root_child0.getLayoutHeight(), 0.0f);

    root.setDirection(CSSDirection.RTL);
    root.calculateLayout(null);

    assertEquals(0, root.getLayoutX(), 0.0f);
    assertEquals(0, root.getLayoutY(), 0.0f);
    assertEquals(100, root.getLayoutWidth(), 0.0f);
    assertEquals(100, root.getLayoutHeight(), 0.0f);

    assertEquals(90, root_child0.getLayoutX(), 0.0f);
    assertEquals(0, root_child0.getLayoutY(), 0.0f);
    assertEquals(10, root_child0.getLayoutWidth(), 0.0f);
    assertEquals(10, root_child0.getLayoutHeight(), 0.0f);
  }

  @Test
  public void test_align_items_flex_end() {
    final CSSNode root = new CSSNode();
    root.setAlignItems(CSSAlign.FLEX_END);
    root.setStyleWidth(100);
    root.setStyleHeight(100);

    final CSSNode root_child0 = new CSSNode();
    root_child0.setStyleWidth(10);
    root_child0.setStyleHeight(10);
    root.addChildAt(root_child0, 0);
    root.setDirection(CSSDirection.LTR);
    root.calculateLayout(null);

    assertEquals(0, root.getLayoutX(), 0.0f);
    assertEquals(0, root.getLayoutY(), 0.0f);
    assertEquals(100, root.getLayoutWidth(), 0.0f);
    assertEquals(100, root.getLayoutHeight(), 0.0f);

    assertEquals(90, root_child0.getLayoutX(), 0.0f);
    assertEquals(0, root_child0.getLayoutY(), 0.0f);
    assertEquals(10, root_child0.getLayoutWidth(), 0.0f);
    assertEquals(10, root_child0.getLayoutHeight(), 0.0f);

    root.setDirection(CSSDirection.RTL);
    root.calculateLayout(null);

    assertEquals(0, root.getLayoutX(), 0.0f);
    assertEquals(0, root.getLayoutY(), 0.0f);
    assertEquals(100, root.getLayoutWidth(), 0.0f);
    assertEquals(100, root.getLayoutHeight(), 0.0f);

    assertEquals(0, root_child0.getLayoutX(), 0.0f);
    assertEquals(0, root_child0.getLayoutY(), 0.0f);
    assertEquals(10, root_child0.getLayoutWidth(), 0.0f);
    assertEquals(10, root_child0.getLayoutHeight(), 0.0f);
  }

}
