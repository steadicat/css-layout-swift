/**
 * Copyright (c) 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */

/**
 * @Generated by gentest/gentest.sh with the following input
 *
<div id="justify_content_row_flex_start" style="width: 102px; height: 102px; flex-direction: row; justify-content: flex-start;">
  <div style="width: 10px;"></div>
  <div style="width: 10px;"></div>
  <div style="width: 10px;"></div>
</div>

<div id="justify_content_row_flex_end" style="width: 102px; height: 102px; flex-direction: row; justify-content: flex-end;">
  <div style="width: 10px;"></div>
  <div style="width: 10px;"></div>
  <div style="width: 10px;"></div>
</div>

<div id="justify_content_row_center" style="width: 102px; height: 102px; flex-direction: row; justify-content: center;">
  <div style="width: 10px;"></div>
  <div style="width: 10px;"></div>
  <div style="width: 10px;"></div>
</div>

<div id="justify_content_row_space_between" style="width: 102px; height: 102px; flex-direction: row; justify-content: space-between;">
  <div style="width: 10px;"></div>
  <div style="width: 10px;"></div>
  <div style="width: 10px;"></div>
</div>

<div id="justify_content_row_space_around" style="width: 102px; height: 102px; flex-direction: row; justify-content: space-around;">
  <div style="width: 10px;"></div>
  <div style="width: 10px;"></div>
  <div style="width: 10px;"></div>
</div>

<div id="justify_content_column_flex_start" style="width: 102px; height: 102px; justify-content: flex-start;">
  <div style="height: 10px;"></div>
  <div style="heigth: 10px;"></div>
  <div style="height: 10px;"></div>
</div>

<div id="justify_content_column_flex_end" style="width: 102px; height: 102px; justify-content: flex-end;">
  <div style="height: 10px;"></div>
  <div style="height: 10px;"></div>
  <div style="height: 10px;"></div>
</div>

<div id="justify_content_column_center" style="width: 102px; height: 102px; justify-content: center;">
  <div style="height: 10px;"></div>
  <div style="height: 10px;"></div>
  <div style="height: 10px;"></div>
</div>

<div id="justify_content_column_space_between" style="width: 102px; height: 102px; justify-content: space-between;">
  <div style="height: 10px;"></div>
  <div style="height: 10px;"></div>
  <div style="height: 10px;"></div>
</div>

<div id="justify_content_column_space_around" style="width: 102px; height: 102px; justify-content: space-around;">
  <div style="height: 10px;"></div>
  <div style="height: 10px;"></div>
  <div style="height: 10px;"></div>
</div>
 *
 */

package com.facebook.csslayout;

import org.junit.Test;

import static org.junit.Assert.assertEquals;

public class CSSLayoutJustifyContentTest {
  @Test
  public void test_justify_content_row_flex_start() {
    final CSSNode root = new CSSNode();
    root.setFlexDirection(CSSFlexDirection.ROW);
    root.setStyleWidth(102);
    root.setStyleHeight(102);

    final CSSNode root_child0 = new CSSNode();
    root_child0.setStyleWidth(10);
    root.addChildAt(root_child0, 0);

    final CSSNode root_child1 = new CSSNode();
    root_child1.setStyleWidth(10);
    root.addChildAt(root_child1, 1);

    final CSSNode root_child2 = new CSSNode();
    root_child2.setStyleWidth(10);
    root.addChildAt(root_child2, 2);
    root.setDirection(CSSDirection.LTR);
    root.calculateLayout(null);

    assertEquals(0, root.getLayoutX(), 0.0f);
    assertEquals(0, root.getLayoutY(), 0.0f);
    assertEquals(102, root.getLayoutWidth(), 0.0f);
    assertEquals(102, root.getLayoutHeight(), 0.0f);

    assertEquals(0, root_child0.getLayoutX(), 0.0f);
    assertEquals(0, root_child0.getLayoutY(), 0.0f);
    assertEquals(10, root_child0.getLayoutWidth(), 0.0f);
    assertEquals(102, root_child0.getLayoutHeight(), 0.0f);

    assertEquals(10, root_child1.getLayoutX(), 0.0f);
    assertEquals(0, root_child1.getLayoutY(), 0.0f);
    assertEquals(10, root_child1.getLayoutWidth(), 0.0f);
    assertEquals(102, root_child1.getLayoutHeight(), 0.0f);

    assertEquals(20, root_child2.getLayoutX(), 0.0f);
    assertEquals(0, root_child2.getLayoutY(), 0.0f);
    assertEquals(10, root_child2.getLayoutWidth(), 0.0f);
    assertEquals(102, root_child2.getLayoutHeight(), 0.0f);

    root.setDirection(CSSDirection.RTL);
    root.calculateLayout(null);

    assertEquals(0, root.getLayoutX(), 0.0f);
    assertEquals(0, root.getLayoutY(), 0.0f);
    assertEquals(102, root.getLayoutWidth(), 0.0f);
    assertEquals(102, root.getLayoutHeight(), 0.0f);

    assertEquals(92, root_child0.getLayoutX(), 0.0f);
    assertEquals(0, root_child0.getLayoutY(), 0.0f);
    assertEquals(10, root_child0.getLayoutWidth(), 0.0f);
    assertEquals(102, root_child0.getLayoutHeight(), 0.0f);

    assertEquals(82, root_child1.getLayoutX(), 0.0f);
    assertEquals(0, root_child1.getLayoutY(), 0.0f);
    assertEquals(10, root_child1.getLayoutWidth(), 0.0f);
    assertEquals(102, root_child1.getLayoutHeight(), 0.0f);

    assertEquals(72, root_child2.getLayoutX(), 0.0f);
    assertEquals(0, root_child2.getLayoutY(), 0.0f);
    assertEquals(10, root_child2.getLayoutWidth(), 0.0f);
    assertEquals(102, root_child2.getLayoutHeight(), 0.0f);
  }

  @Test
  public void test_justify_content_row_flex_end() {
    final CSSNode root = new CSSNode();
    root.setFlexDirection(CSSFlexDirection.ROW);
    root.setJustifyContent(CSSJustify.FLEX_END);
    root.setStyleWidth(102);
    root.setStyleHeight(102);

    final CSSNode root_child0 = new CSSNode();
    root_child0.setStyleWidth(10);
    root.addChildAt(root_child0, 0);

    final CSSNode root_child1 = new CSSNode();
    root_child1.setStyleWidth(10);
    root.addChildAt(root_child1, 1);

    final CSSNode root_child2 = new CSSNode();
    root_child2.setStyleWidth(10);
    root.addChildAt(root_child2, 2);
    root.setDirection(CSSDirection.LTR);
    root.calculateLayout(null);

    assertEquals(0, root.getLayoutX(), 0.0f);
    assertEquals(0, root.getLayoutY(), 0.0f);
    assertEquals(102, root.getLayoutWidth(), 0.0f);
    assertEquals(102, root.getLayoutHeight(), 0.0f);

    assertEquals(72, root_child0.getLayoutX(), 0.0f);
    assertEquals(0, root_child0.getLayoutY(), 0.0f);
    assertEquals(10, root_child0.getLayoutWidth(), 0.0f);
    assertEquals(102, root_child0.getLayoutHeight(), 0.0f);

    assertEquals(82, root_child1.getLayoutX(), 0.0f);
    assertEquals(0, root_child1.getLayoutY(), 0.0f);
    assertEquals(10, root_child1.getLayoutWidth(), 0.0f);
    assertEquals(102, root_child1.getLayoutHeight(), 0.0f);

    assertEquals(92, root_child2.getLayoutX(), 0.0f);
    assertEquals(0, root_child2.getLayoutY(), 0.0f);
    assertEquals(10, root_child2.getLayoutWidth(), 0.0f);
    assertEquals(102, root_child2.getLayoutHeight(), 0.0f);

    root.setDirection(CSSDirection.RTL);
    root.calculateLayout(null);

    assertEquals(0, root.getLayoutX(), 0.0f);
    assertEquals(0, root.getLayoutY(), 0.0f);
    assertEquals(102, root.getLayoutWidth(), 0.0f);
    assertEquals(102, root.getLayoutHeight(), 0.0f);

    assertEquals(20, root_child0.getLayoutX(), 0.0f);
    assertEquals(0, root_child0.getLayoutY(), 0.0f);
    assertEquals(10, root_child0.getLayoutWidth(), 0.0f);
    assertEquals(102, root_child0.getLayoutHeight(), 0.0f);

    assertEquals(10, root_child1.getLayoutX(), 0.0f);
    assertEquals(0, root_child1.getLayoutY(), 0.0f);
    assertEquals(10, root_child1.getLayoutWidth(), 0.0f);
    assertEquals(102, root_child1.getLayoutHeight(), 0.0f);

    assertEquals(0, root_child2.getLayoutX(), 0.0f);
    assertEquals(0, root_child2.getLayoutY(), 0.0f);
    assertEquals(10, root_child2.getLayoutWidth(), 0.0f);
    assertEquals(102, root_child2.getLayoutHeight(), 0.0f);
  }

  @Test
  public void test_justify_content_row_center() {
    final CSSNode root = new CSSNode();
    root.setFlexDirection(CSSFlexDirection.ROW);
    root.setJustifyContent(CSSJustify.CENTER);
    root.setStyleWidth(102);
    root.setStyleHeight(102);

    final CSSNode root_child0 = new CSSNode();
    root_child0.setStyleWidth(10);
    root.addChildAt(root_child0, 0);

    final CSSNode root_child1 = new CSSNode();
    root_child1.setStyleWidth(10);
    root.addChildAt(root_child1, 1);

    final CSSNode root_child2 = new CSSNode();
    root_child2.setStyleWidth(10);
    root.addChildAt(root_child2, 2);
    root.setDirection(CSSDirection.LTR);
    root.calculateLayout(null);

    assertEquals(0, root.getLayoutX(), 0.0f);
    assertEquals(0, root.getLayoutY(), 0.0f);
    assertEquals(102, root.getLayoutWidth(), 0.0f);
    assertEquals(102, root.getLayoutHeight(), 0.0f);

    assertEquals(36, root_child0.getLayoutX(), 0.0f);
    assertEquals(0, root_child0.getLayoutY(), 0.0f);
    assertEquals(10, root_child0.getLayoutWidth(), 0.0f);
    assertEquals(102, root_child0.getLayoutHeight(), 0.0f);

    assertEquals(46, root_child1.getLayoutX(), 0.0f);
    assertEquals(0, root_child1.getLayoutY(), 0.0f);
    assertEquals(10, root_child1.getLayoutWidth(), 0.0f);
    assertEquals(102, root_child1.getLayoutHeight(), 0.0f);

    assertEquals(56, root_child2.getLayoutX(), 0.0f);
    assertEquals(0, root_child2.getLayoutY(), 0.0f);
    assertEquals(10, root_child2.getLayoutWidth(), 0.0f);
    assertEquals(102, root_child2.getLayoutHeight(), 0.0f);

    root.setDirection(CSSDirection.RTL);
    root.calculateLayout(null);

    assertEquals(0, root.getLayoutX(), 0.0f);
    assertEquals(0, root.getLayoutY(), 0.0f);
    assertEquals(102, root.getLayoutWidth(), 0.0f);
    assertEquals(102, root.getLayoutHeight(), 0.0f);

    assertEquals(56, root_child0.getLayoutX(), 0.0f);
    assertEquals(0, root_child0.getLayoutY(), 0.0f);
    assertEquals(10, root_child0.getLayoutWidth(), 0.0f);
    assertEquals(102, root_child0.getLayoutHeight(), 0.0f);

    assertEquals(46, root_child1.getLayoutX(), 0.0f);
    assertEquals(0, root_child1.getLayoutY(), 0.0f);
    assertEquals(10, root_child1.getLayoutWidth(), 0.0f);
    assertEquals(102, root_child1.getLayoutHeight(), 0.0f);

    assertEquals(36, root_child2.getLayoutX(), 0.0f);
    assertEquals(0, root_child2.getLayoutY(), 0.0f);
    assertEquals(10, root_child2.getLayoutWidth(), 0.0f);
    assertEquals(102, root_child2.getLayoutHeight(), 0.0f);
  }

  @Test
  public void test_justify_content_row_space_between() {
    final CSSNode root = new CSSNode();
    root.setFlexDirection(CSSFlexDirection.ROW);
    root.setJustifyContent(CSSJustify.SPACE_BETWEEN);
    root.setStyleWidth(102);
    root.setStyleHeight(102);

    final CSSNode root_child0 = new CSSNode();
    root_child0.setStyleWidth(10);
    root.addChildAt(root_child0, 0);

    final CSSNode root_child1 = new CSSNode();
    root_child1.setStyleWidth(10);
    root.addChildAt(root_child1, 1);

    final CSSNode root_child2 = new CSSNode();
    root_child2.setStyleWidth(10);
    root.addChildAt(root_child2, 2);
    root.setDirection(CSSDirection.LTR);
    root.calculateLayout(null);

    assertEquals(0, root.getLayoutX(), 0.0f);
    assertEquals(0, root.getLayoutY(), 0.0f);
    assertEquals(102, root.getLayoutWidth(), 0.0f);
    assertEquals(102, root.getLayoutHeight(), 0.0f);

    assertEquals(0, root_child0.getLayoutX(), 0.0f);
    assertEquals(0, root_child0.getLayoutY(), 0.0f);
    assertEquals(10, root_child0.getLayoutWidth(), 0.0f);
    assertEquals(102, root_child0.getLayoutHeight(), 0.0f);

    assertEquals(46, root_child1.getLayoutX(), 0.0f);
    assertEquals(0, root_child1.getLayoutY(), 0.0f);
    assertEquals(10, root_child1.getLayoutWidth(), 0.0f);
    assertEquals(102, root_child1.getLayoutHeight(), 0.0f);

    assertEquals(92, root_child2.getLayoutX(), 0.0f);
    assertEquals(0, root_child2.getLayoutY(), 0.0f);
    assertEquals(10, root_child2.getLayoutWidth(), 0.0f);
    assertEquals(102, root_child2.getLayoutHeight(), 0.0f);

    root.setDirection(CSSDirection.RTL);
    root.calculateLayout(null);

    assertEquals(0, root.getLayoutX(), 0.0f);
    assertEquals(0, root.getLayoutY(), 0.0f);
    assertEquals(102, root.getLayoutWidth(), 0.0f);
    assertEquals(102, root.getLayoutHeight(), 0.0f);

    assertEquals(92, root_child0.getLayoutX(), 0.0f);
    assertEquals(0, root_child0.getLayoutY(), 0.0f);
    assertEquals(10, root_child0.getLayoutWidth(), 0.0f);
    assertEquals(102, root_child0.getLayoutHeight(), 0.0f);

    assertEquals(46, root_child1.getLayoutX(), 0.0f);
    assertEquals(0, root_child1.getLayoutY(), 0.0f);
    assertEquals(10, root_child1.getLayoutWidth(), 0.0f);
    assertEquals(102, root_child1.getLayoutHeight(), 0.0f);

    assertEquals(0, root_child2.getLayoutX(), 0.0f);
    assertEquals(0, root_child2.getLayoutY(), 0.0f);
    assertEquals(10, root_child2.getLayoutWidth(), 0.0f);
    assertEquals(102, root_child2.getLayoutHeight(), 0.0f);
  }

  @Test
  public void test_justify_content_row_space_around() {
    final CSSNode root = new CSSNode();
    root.setFlexDirection(CSSFlexDirection.ROW);
    root.setJustifyContent(CSSJustify.SPACE_AROUND);
    root.setStyleWidth(102);
    root.setStyleHeight(102);

    final CSSNode root_child0 = new CSSNode();
    root_child0.setStyleWidth(10);
    root.addChildAt(root_child0, 0);

    final CSSNode root_child1 = new CSSNode();
    root_child1.setStyleWidth(10);
    root.addChildAt(root_child1, 1);

    final CSSNode root_child2 = new CSSNode();
    root_child2.setStyleWidth(10);
    root.addChildAt(root_child2, 2);
    root.setDirection(CSSDirection.LTR);
    root.calculateLayout(null);

    assertEquals(0, root.getLayoutX(), 0.0f);
    assertEquals(0, root.getLayoutY(), 0.0f);
    assertEquals(102, root.getLayoutWidth(), 0.0f);
    assertEquals(102, root.getLayoutHeight(), 0.0f);

    assertEquals(12, root_child0.getLayoutX(), 0.0f);
    assertEquals(0, root_child0.getLayoutY(), 0.0f);
    assertEquals(10, root_child0.getLayoutWidth(), 0.0f);
    assertEquals(102, root_child0.getLayoutHeight(), 0.0f);

    assertEquals(46, root_child1.getLayoutX(), 0.0f);
    assertEquals(0, root_child1.getLayoutY(), 0.0f);
    assertEquals(10, root_child1.getLayoutWidth(), 0.0f);
    assertEquals(102, root_child1.getLayoutHeight(), 0.0f);

    assertEquals(80, root_child2.getLayoutX(), 0.0f);
    assertEquals(0, root_child2.getLayoutY(), 0.0f);
    assertEquals(10, root_child2.getLayoutWidth(), 0.0f);
    assertEquals(102, root_child2.getLayoutHeight(), 0.0f);

    root.setDirection(CSSDirection.RTL);
    root.calculateLayout(null);

    assertEquals(0, root.getLayoutX(), 0.0f);
    assertEquals(0, root.getLayoutY(), 0.0f);
    assertEquals(102, root.getLayoutWidth(), 0.0f);
    assertEquals(102, root.getLayoutHeight(), 0.0f);

    assertEquals(80, root_child0.getLayoutX(), 0.0f);
    assertEquals(0, root_child0.getLayoutY(), 0.0f);
    assertEquals(10, root_child0.getLayoutWidth(), 0.0f);
    assertEquals(102, root_child0.getLayoutHeight(), 0.0f);

    assertEquals(46, root_child1.getLayoutX(), 0.0f);
    assertEquals(0, root_child1.getLayoutY(), 0.0f);
    assertEquals(10, root_child1.getLayoutWidth(), 0.0f);
    assertEquals(102, root_child1.getLayoutHeight(), 0.0f);

    assertEquals(12, root_child2.getLayoutX(), 0.0f);
    assertEquals(0, root_child2.getLayoutY(), 0.0f);
    assertEquals(10, root_child2.getLayoutWidth(), 0.0f);
    assertEquals(102, root_child2.getLayoutHeight(), 0.0f);
  }

  @Test
  public void test_justify_content_column_flex_start() {
    final CSSNode root = new CSSNode();
    root.setStyleWidth(102);
    root.setStyleHeight(102);

    final CSSNode root_child0 = new CSSNode();
    root_child0.setStyleHeight(10);
    root.addChildAt(root_child0, 0);

    final CSSNode root_child1 = new CSSNode();
    root.addChildAt(root_child1, 1);

    final CSSNode root_child2 = new CSSNode();
    root_child2.setStyleHeight(10);
    root.addChildAt(root_child2, 2);
    root.setDirection(CSSDirection.LTR);
    root.calculateLayout(null);

    assertEquals(0, root.getLayoutX(), 0.0f);
    assertEquals(0, root.getLayoutY(), 0.0f);
    assertEquals(102, root.getLayoutWidth(), 0.0f);
    assertEquals(102, root.getLayoutHeight(), 0.0f);

    assertEquals(0, root_child0.getLayoutX(), 0.0f);
    assertEquals(0, root_child0.getLayoutY(), 0.0f);
    assertEquals(102, root_child0.getLayoutWidth(), 0.0f);
    assertEquals(10, root_child0.getLayoutHeight(), 0.0f);

    assertEquals(0, root_child1.getLayoutX(), 0.0f);
    assertEquals(10, root_child1.getLayoutY(), 0.0f);
    assertEquals(102, root_child1.getLayoutWidth(), 0.0f);
    assertEquals(0, root_child1.getLayoutHeight(), 0.0f);

    assertEquals(0, root_child2.getLayoutX(), 0.0f);
    assertEquals(10, root_child2.getLayoutY(), 0.0f);
    assertEquals(102, root_child2.getLayoutWidth(), 0.0f);
    assertEquals(10, root_child2.getLayoutHeight(), 0.0f);

    root.setDirection(CSSDirection.RTL);
    root.calculateLayout(null);

    assertEquals(0, root.getLayoutX(), 0.0f);
    assertEquals(0, root.getLayoutY(), 0.0f);
    assertEquals(102, root.getLayoutWidth(), 0.0f);
    assertEquals(102, root.getLayoutHeight(), 0.0f);

    assertEquals(0, root_child0.getLayoutX(), 0.0f);
    assertEquals(0, root_child0.getLayoutY(), 0.0f);
    assertEquals(102, root_child0.getLayoutWidth(), 0.0f);
    assertEquals(10, root_child0.getLayoutHeight(), 0.0f);

    assertEquals(0, root_child1.getLayoutX(), 0.0f);
    assertEquals(10, root_child1.getLayoutY(), 0.0f);
    assertEquals(102, root_child1.getLayoutWidth(), 0.0f);
    assertEquals(0, root_child1.getLayoutHeight(), 0.0f);

    assertEquals(0, root_child2.getLayoutX(), 0.0f);
    assertEquals(10, root_child2.getLayoutY(), 0.0f);
    assertEquals(102, root_child2.getLayoutWidth(), 0.0f);
    assertEquals(10, root_child2.getLayoutHeight(), 0.0f);
  }

  @Test
  public void test_justify_content_column_flex_end() {
    final CSSNode root = new CSSNode();
    root.setJustifyContent(CSSJustify.FLEX_END);
    root.setStyleWidth(102);
    root.setStyleHeight(102);

    final CSSNode root_child0 = new CSSNode();
    root_child0.setStyleHeight(10);
    root.addChildAt(root_child0, 0);

    final CSSNode root_child1 = new CSSNode();
    root_child1.setStyleHeight(10);
    root.addChildAt(root_child1, 1);

    final CSSNode root_child2 = new CSSNode();
    root_child2.setStyleHeight(10);
    root.addChildAt(root_child2, 2);
    root.setDirection(CSSDirection.LTR);
    root.calculateLayout(null);

    assertEquals(0, root.getLayoutX(), 0.0f);
    assertEquals(0, root.getLayoutY(), 0.0f);
    assertEquals(102, root.getLayoutWidth(), 0.0f);
    assertEquals(102, root.getLayoutHeight(), 0.0f);

    assertEquals(0, root_child0.getLayoutX(), 0.0f);
    assertEquals(72, root_child0.getLayoutY(), 0.0f);
    assertEquals(102, root_child0.getLayoutWidth(), 0.0f);
    assertEquals(10, root_child0.getLayoutHeight(), 0.0f);

    assertEquals(0, root_child1.getLayoutX(), 0.0f);
    assertEquals(82, root_child1.getLayoutY(), 0.0f);
    assertEquals(102, root_child1.getLayoutWidth(), 0.0f);
    assertEquals(10, root_child1.getLayoutHeight(), 0.0f);

    assertEquals(0, root_child2.getLayoutX(), 0.0f);
    assertEquals(92, root_child2.getLayoutY(), 0.0f);
    assertEquals(102, root_child2.getLayoutWidth(), 0.0f);
    assertEquals(10, root_child2.getLayoutHeight(), 0.0f);

    root.setDirection(CSSDirection.RTL);
    root.calculateLayout(null);

    assertEquals(0, root.getLayoutX(), 0.0f);
    assertEquals(0, root.getLayoutY(), 0.0f);
    assertEquals(102, root.getLayoutWidth(), 0.0f);
    assertEquals(102, root.getLayoutHeight(), 0.0f);

    assertEquals(0, root_child0.getLayoutX(), 0.0f);
    assertEquals(72, root_child0.getLayoutY(), 0.0f);
    assertEquals(102, root_child0.getLayoutWidth(), 0.0f);
    assertEquals(10, root_child0.getLayoutHeight(), 0.0f);

    assertEquals(0, root_child1.getLayoutX(), 0.0f);
    assertEquals(82, root_child1.getLayoutY(), 0.0f);
    assertEquals(102, root_child1.getLayoutWidth(), 0.0f);
    assertEquals(10, root_child1.getLayoutHeight(), 0.0f);

    assertEquals(0, root_child2.getLayoutX(), 0.0f);
    assertEquals(92, root_child2.getLayoutY(), 0.0f);
    assertEquals(102, root_child2.getLayoutWidth(), 0.0f);
    assertEquals(10, root_child2.getLayoutHeight(), 0.0f);
  }

  @Test
  public void test_justify_content_column_center() {
    final CSSNode root = new CSSNode();
    root.setJustifyContent(CSSJustify.CENTER);
    root.setStyleWidth(102);
    root.setStyleHeight(102);

    final CSSNode root_child0 = new CSSNode();
    root_child0.setStyleHeight(10);
    root.addChildAt(root_child0, 0);

    final CSSNode root_child1 = new CSSNode();
    root_child1.setStyleHeight(10);
    root.addChildAt(root_child1, 1);

    final CSSNode root_child2 = new CSSNode();
    root_child2.setStyleHeight(10);
    root.addChildAt(root_child2, 2);
    root.setDirection(CSSDirection.LTR);
    root.calculateLayout(null);

    assertEquals(0, root.getLayoutX(), 0.0f);
    assertEquals(0, root.getLayoutY(), 0.0f);
    assertEquals(102, root.getLayoutWidth(), 0.0f);
    assertEquals(102, root.getLayoutHeight(), 0.0f);

    assertEquals(0, root_child0.getLayoutX(), 0.0f);
    assertEquals(36, root_child0.getLayoutY(), 0.0f);
    assertEquals(102, root_child0.getLayoutWidth(), 0.0f);
    assertEquals(10, root_child0.getLayoutHeight(), 0.0f);

    assertEquals(0, root_child1.getLayoutX(), 0.0f);
    assertEquals(46, root_child1.getLayoutY(), 0.0f);
    assertEquals(102, root_child1.getLayoutWidth(), 0.0f);
    assertEquals(10, root_child1.getLayoutHeight(), 0.0f);

    assertEquals(0, root_child2.getLayoutX(), 0.0f);
    assertEquals(56, root_child2.getLayoutY(), 0.0f);
    assertEquals(102, root_child2.getLayoutWidth(), 0.0f);
    assertEquals(10, root_child2.getLayoutHeight(), 0.0f);

    root.setDirection(CSSDirection.RTL);
    root.calculateLayout(null);

    assertEquals(0, root.getLayoutX(), 0.0f);
    assertEquals(0, root.getLayoutY(), 0.0f);
    assertEquals(102, root.getLayoutWidth(), 0.0f);
    assertEquals(102, root.getLayoutHeight(), 0.0f);

    assertEquals(0, root_child0.getLayoutX(), 0.0f);
    assertEquals(36, root_child0.getLayoutY(), 0.0f);
    assertEquals(102, root_child0.getLayoutWidth(), 0.0f);
    assertEquals(10, root_child0.getLayoutHeight(), 0.0f);

    assertEquals(0, root_child1.getLayoutX(), 0.0f);
    assertEquals(46, root_child1.getLayoutY(), 0.0f);
    assertEquals(102, root_child1.getLayoutWidth(), 0.0f);
    assertEquals(10, root_child1.getLayoutHeight(), 0.0f);

    assertEquals(0, root_child2.getLayoutX(), 0.0f);
    assertEquals(56, root_child2.getLayoutY(), 0.0f);
    assertEquals(102, root_child2.getLayoutWidth(), 0.0f);
    assertEquals(10, root_child2.getLayoutHeight(), 0.0f);
  }

  @Test
  public void test_justify_content_column_space_between() {
    final CSSNode root = new CSSNode();
    root.setJustifyContent(CSSJustify.SPACE_BETWEEN);
    root.setStyleWidth(102);
    root.setStyleHeight(102);

    final CSSNode root_child0 = new CSSNode();
    root_child0.setStyleHeight(10);
    root.addChildAt(root_child0, 0);

    final CSSNode root_child1 = new CSSNode();
    root_child1.setStyleHeight(10);
    root.addChildAt(root_child1, 1);

    final CSSNode root_child2 = new CSSNode();
    root_child2.setStyleHeight(10);
    root.addChildAt(root_child2, 2);
    root.setDirection(CSSDirection.LTR);
    root.calculateLayout(null);

    assertEquals(0, root.getLayoutX(), 0.0f);
    assertEquals(0, root.getLayoutY(), 0.0f);
    assertEquals(102, root.getLayoutWidth(), 0.0f);
    assertEquals(102, root.getLayoutHeight(), 0.0f);

    assertEquals(0, root_child0.getLayoutX(), 0.0f);
    assertEquals(0, root_child0.getLayoutY(), 0.0f);
    assertEquals(102, root_child0.getLayoutWidth(), 0.0f);
    assertEquals(10, root_child0.getLayoutHeight(), 0.0f);

    assertEquals(0, root_child1.getLayoutX(), 0.0f);
    assertEquals(46, root_child1.getLayoutY(), 0.0f);
    assertEquals(102, root_child1.getLayoutWidth(), 0.0f);
    assertEquals(10, root_child1.getLayoutHeight(), 0.0f);

    assertEquals(0, root_child2.getLayoutX(), 0.0f);
    assertEquals(92, root_child2.getLayoutY(), 0.0f);
    assertEquals(102, root_child2.getLayoutWidth(), 0.0f);
    assertEquals(10, root_child2.getLayoutHeight(), 0.0f);

    root.setDirection(CSSDirection.RTL);
    root.calculateLayout(null);

    assertEquals(0, root.getLayoutX(), 0.0f);
    assertEquals(0, root.getLayoutY(), 0.0f);
    assertEquals(102, root.getLayoutWidth(), 0.0f);
    assertEquals(102, root.getLayoutHeight(), 0.0f);

    assertEquals(0, root_child0.getLayoutX(), 0.0f);
    assertEquals(0, root_child0.getLayoutY(), 0.0f);
    assertEquals(102, root_child0.getLayoutWidth(), 0.0f);
    assertEquals(10, root_child0.getLayoutHeight(), 0.0f);

    assertEquals(0, root_child1.getLayoutX(), 0.0f);
    assertEquals(46, root_child1.getLayoutY(), 0.0f);
    assertEquals(102, root_child1.getLayoutWidth(), 0.0f);
    assertEquals(10, root_child1.getLayoutHeight(), 0.0f);

    assertEquals(0, root_child2.getLayoutX(), 0.0f);
    assertEquals(92, root_child2.getLayoutY(), 0.0f);
    assertEquals(102, root_child2.getLayoutWidth(), 0.0f);
    assertEquals(10, root_child2.getLayoutHeight(), 0.0f);
  }

  @Test
  public void test_justify_content_column_space_around() {
    final CSSNode root = new CSSNode();
    root.setJustifyContent(CSSJustify.SPACE_AROUND);
    root.setStyleWidth(102);
    root.setStyleHeight(102);

    final CSSNode root_child0 = new CSSNode();
    root_child0.setStyleHeight(10);
    root.addChildAt(root_child0, 0);

    final CSSNode root_child1 = new CSSNode();
    root_child1.setStyleHeight(10);
    root.addChildAt(root_child1, 1);

    final CSSNode root_child2 = new CSSNode();
    root_child2.setStyleHeight(10);
    root.addChildAt(root_child2, 2);
    root.setDirection(CSSDirection.LTR);
    root.calculateLayout(null);

    assertEquals(0, root.getLayoutX(), 0.0f);
    assertEquals(0, root.getLayoutY(), 0.0f);
    assertEquals(102, root.getLayoutWidth(), 0.0f);
    assertEquals(102, root.getLayoutHeight(), 0.0f);

    assertEquals(0, root_child0.getLayoutX(), 0.0f);
    assertEquals(12, root_child0.getLayoutY(), 0.0f);
    assertEquals(102, root_child0.getLayoutWidth(), 0.0f);
    assertEquals(10, root_child0.getLayoutHeight(), 0.0f);

    assertEquals(0, root_child1.getLayoutX(), 0.0f);
    assertEquals(46, root_child1.getLayoutY(), 0.0f);
    assertEquals(102, root_child1.getLayoutWidth(), 0.0f);
    assertEquals(10, root_child1.getLayoutHeight(), 0.0f);

    assertEquals(0, root_child2.getLayoutX(), 0.0f);
    assertEquals(80, root_child2.getLayoutY(), 0.0f);
    assertEquals(102, root_child2.getLayoutWidth(), 0.0f);
    assertEquals(10, root_child2.getLayoutHeight(), 0.0f);

    root.setDirection(CSSDirection.RTL);
    root.calculateLayout(null);

    assertEquals(0, root.getLayoutX(), 0.0f);
    assertEquals(0, root.getLayoutY(), 0.0f);
    assertEquals(102, root.getLayoutWidth(), 0.0f);
    assertEquals(102, root.getLayoutHeight(), 0.0f);

    assertEquals(0, root_child0.getLayoutX(), 0.0f);
    assertEquals(12, root_child0.getLayoutY(), 0.0f);
    assertEquals(102, root_child0.getLayoutWidth(), 0.0f);
    assertEquals(10, root_child0.getLayoutHeight(), 0.0f);

    assertEquals(0, root_child1.getLayoutX(), 0.0f);
    assertEquals(46, root_child1.getLayoutY(), 0.0f);
    assertEquals(102, root_child1.getLayoutWidth(), 0.0f);
    assertEquals(10, root_child1.getLayoutHeight(), 0.0f);

    assertEquals(0, root_child2.getLayoutX(), 0.0f);
    assertEquals(80, root_child2.getLayoutY(), 0.0f);
    assertEquals(102, root_child2.getLayoutWidth(), 0.0f);
    assertEquals(10, root_child2.getLayoutHeight(), 0.0f);
  }

}
